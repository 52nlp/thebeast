#LyX file created by tex2lyx 1.6.2
\lyxformat 247
\begin_document
\begin_header
\textclass article
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize 11
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\cite_engine natbib_authoryear
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%% Local Variables: 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%% mode: latex
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%% TeX-master: "paper"
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%% End: 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Semantic Role Labelling\InsetSpace ~

\begin_inset LatexCommand \citep[][SRL, ]{marquez08srl}

\end_inset

 is generally understood as the task of identifying and classifying the semantic arguments and modifiers of the predicates mentioned in a sentence. For example, in the case of the following sentence: 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV-+ 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Quote
\align center


\begin_inset Graphics 
	filename haag-example.eps
	scale 63

\end_inset

 
\end_layout

\begin_layout Quote


\begin_inset ERT
status collapsed

\begin_layout Standard

%$[_{Player}$Ms. Haag$]$ plays $[_{Role}$Elianti$]$.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%Ms. {[}Haag$_{Player}$] plays {[}Elianti$_{Role}$].
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%IV: I think "we are to find" is not english, I propose: illustrates that
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%SR: I think it is English (check google for "we are to"): it's a fancy type of "have to" 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

we are to find out that for the predicate token 
\begin_inset Quotes eld
\end_inset

plays
\begin_inset Quotes erd
\end_inset

 with sense 
\begin_inset Quotes eld
\end_inset

play a role
\begin_inset Quotes erd
\end_inset

 (play.02) the phrase headed by the token 
\begin_inset Quotes eld
\end_inset

Haag
\begin_inset Quotes erd
\end_inset

 is referring to the player (A0) of the play event, and the phrase headed by the token 
\begin_inset Quotes eld
\end_inset

Elianti
\begin_inset Quotes erd
\end_inset

 is referring to the role (A1) 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV-+
\end_layout

\begin_layout Standard


\end_layout

\end_inset

being played. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%{}``Elianti'' is playing (see figure ?).%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%IV- We can live without saying this now
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
footnote{This is the dependency-based formulation of SRL.} 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

SRL is considered as a key task for applications that require to answer 
\begin_inset Quotes eld
\end_inset

Who
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

What
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Where
\begin_inset Quotes erd
\end_inset

, etc. questions, such as Information Extraction, Question Answering and Summarization.
\end_layout

\begin_layout Standard

Any real-world SRL system needs to make several decisions, either explicitly or implicitly: which are the predicate tokens of a sentence (predicate identification), which are the tokens that have semantic roles with respect to these predicates (argument identification), which are the roles these tokens play (argument classification), and which is the sense of the predicate (sense disambiguation).
\end_layout

\begin_layout Standard

In this paper we use Markov Logic, a Statistical Relational Learning framework that combines First Order Logic and Markov Networks, to develop a joint probabilistic model over all decisions mentioned above. The following paragraphs will motivate this choice. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%% TODO: a bit disconnected here
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

First, it allows us to readily capture 
\emph on
global correlations
\emph default
 between decisions, such as the constraint that a predicate can only have one agent. This type of correlations has been successfully exploited in several previous SRL approaches\InsetSpace ~

\begin_inset LatexCommand \citep{toutanova05joint,punyakanok05generalized}

\end_inset

.
\end_layout

\begin_layout Standard

Second, we can use the joint model to evaluate the benefit of incorporating decisions into the joint model that either have not received much attention within the SRL community (predicate identification and sense disambiguation), or been largely made in isolation (argument identification and classification for all predicates of a sentence).
\end_layout

\begin_layout Standard

Third, our Markov Logic model is essentially a template that describes a class of Markov Networks. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV: Algorithms ?? I suggest: Recent development on the inference algorithms allows to perform inference without ever having to fully instantiate...
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Algorithms can perform inference in terms of this template without ever having to fully instantiate the complete Markov Network\InsetSpace ~

\begin_inset LatexCommand \citep{riedel08improving,singla2008lfo}

\end_inset

. This can dramatically improve the efficiency of an SRL system when compared to a propositional approach such as Integer Linear Programming\InsetSpace ~
(ILP).
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%% SR: This bit is just to remind me that we should sell this point,
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%% too. It might not make it into the paper as is, though!
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%IV: If not space, I think we should take it away
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%Fourth, by framing our problem in Markov Logic we provide a natural
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%upgrade path for the consideration of richer models. For example, it
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%would be relatively straight-forward to include a Relation Extraction
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%component into our model, or the prediction of the next speech act in a
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%dialogue system.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Finally, when it comes to actually building an SRL system with Markov Logic 
\begin_inset ERT
status collapsed

\begin_layout Standard

%(say, in order to reproduce this work) 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

there are 
\begin_inset Quotes eld
\end_inset

only
\begin_inset Quotes erd
\end_inset

 four things 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV-
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%left for us 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

to do: preparing input data files, converting output data files, and triggering learning and inference. The remaining work can be done by an off-the-shelf Markov Logic interpreter. This is to be contrasted with pipeline systems where several components need to be trained and connected, or Integer Linear Programming approaches for which we need to write additional wrapper code to generate ILPs.
\end_layout

\begin_layout Standard

Empirically we find that our system is competitive---our best model would appear on par with the best entry in the CoNLL 2008 shared task open track, and at the 4th place of the closed track---right behind systems that use significantly better parsers
\begin_inset Foot
status collapsed


\begin_layout Standard

Our unlabelled accuracy for syntactic dependencies is at least 3% points under theirs.
\end_layout

\end_inset

 to generate their input features.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%and at the 4th place when compared to systems
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%that use dedicated parsers; this is remarkable in the sense that the
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%top 3 systems use optimized parsers while we use the dependency parses
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%extracted from 
\backslash
citet{charniak00amaximum} parse trees.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% dependencies provided in the open track dataset.  
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% We use charniak parses
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

We also observe that by integrating frame disambiguation into the joint SRL model, and by extracting all arguments for all predicates in a sentence simultaneously, significant improvements compared to more isolated systems can be achieved. These improvements are particularly large in the case of out-of-domain data, suggesting that a joint approach helps to increase the robustness of SRL. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV- putting the who paragraphs together
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Last but not least, we show that despite the joint approach, our system is still efficient. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%IV
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%(maybe also faster than the pipeline?). 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Our paper is organized as follows: we first introduce Markov Logic (section 
\begin_inset LatexCommand \ref{sec:markovlogic}

\end_inset

), then we present our model in terms of Markov Logic (section 
\begin_inset LatexCommand \ref{sec:model}

\end_inset

) and illustrate how to perform learning and inference with it (section 
\begin_inset LatexCommand \ref{sec:model}

\end_inset

). How this model will be evaluated is explained in section 
\begin_inset LatexCommand \ref{sec:experiments}

\end_inset

 with the corresponding evaluation presented in section 
\begin_inset LatexCommand \ref{sec:results}

\end_inset

 We conclude in section 
\begin_inset LatexCommand \ref{sec:conclusion}

\end_inset

.
\end_layout

\end_body
\end_document
